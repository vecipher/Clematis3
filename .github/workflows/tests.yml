

name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.12" ]
    env:
      LC_ALL: C
      PYTHONUTF8: "1"
      COLUMNS: "80"
      PYTHONHASHSEED: "0"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Export GIT SHA
        run: |
          echo "CLEMATIS_GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - uses: dtolnay/rust-toolchain@stable

      - name: Install test tooling & build deps
        run: |
          python -m pip install -U pip build setuptools-rust wheel
          python -m pip install -U pytest pytest-timeout hypothesis pyyaml
          # if extras files exist, install them (non-fatal if missing)
          if [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt || true; fi
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt || true; fi

      - name: Build wheel
        run: |
          set -euo pipefail
          rm -rf build dist *.egg-info
          python -m build -w

      - name: Install wheel (use installed pkg, not source tree)
        run: |
          set -euo pipefail
          python -m pip install --force-reinstall dist/*.whl
          python - <<'PY'
          import importlib, clematis
          print("clematis:", getattr(clematis, "__version__", "n/a"), "@", clematis.__file__)
          rs = importlib.import_module("clematis.native._t1_rs")
          print("_t1_rs:", rs.__file__, "caps/gel:", hasattr(rs, "propagate_one_graph_rs"), hasattr(rs, "gel_tick_decay"))
          PY

      - name: Run tests (offline, wheel import)
        working-directory: /tmp
        env:
          CLEMATIS_NETWORK_BAN: "1"
          CI: "true"
          PYTHONHASHSEED: "0"
        run: |
          set -euo pipefail
          pytest -q -m "not manual" "$GITHUB_WORKSPACE/tests"

      - name: Caps parity (native path)
        working-directory: /tmp
        env:
          CLEMATIS_NATIVE_T1: "1"
          CI: "true"
        run: |
          set -euo pipefail
          pytest -q "$GITHUB_WORKSPACE/tests/native/test_parity_perf_on.py"
          pytest -q "$GITHUB_WORKSPACE/tests/native/test_caps_counters.py"

      - name: Strict parity over caps (advisory)
        continue-on-error: true
        working-directory: /tmp
        env:
          CLEMATIS_NATIVE_T1: "1"
          CLEMATIS_STRICT_PARITY: "1"
          CI: "true"
        run: |
          set -euo pipefail
          pytest -q "$GITHUB_WORKSPACE/tests/native/test_parity_perf_on.py"

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ matrix.python-version }}
          path: |
            logs/quality/**
            .pytest_cache/**
          if-no-files-found: ignore

  extras:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install with extras
        run: |
          python -m pip install -U pip
          python -m pip install -e '.[dev,zstd,lancedb]'

      - name: Run extras smoke tests
        run: pytest -q tests/packaging

  wheel-extras:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - uses: dtolnay/rust-toolchain@stable

      - name: Build & install wheel
        run: |
          python -m pip install -U pip build setuptools-rust
          rm -rf build dist *.egg-info
          python -m build --wheel
          python -m pip install --force-reinstall dist/*.whl

      - name: Import check
        run: python -c "from clematis.optional import zstd_support, lancedb_support; print('ok')"
