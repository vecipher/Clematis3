

name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.12" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Export GIT SHA
        run: |
          echo "CLEMATIS_GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -e .
          # Ensure pytest is present even if not listed
          python - <<'PY'
          import pkgutil, subprocess, sys
          missing = [p for p in ("pytest",) if not pkgutil.find_loader(p)]
          if missing:
              subprocess.check_call([sys.executable, "-m", "pip", "install", *missing])
          PY

      - name: Run tests (offline)
        env:
          CLEMATIS_NETWORK_BAN: "1"
          CI: "true"
        run: |
          pytest -q -m "not manual"

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ matrix.python-version }}
          path: |
            logs/quality/**
            .pytest_cache/**
          if-no-files-found: ignore