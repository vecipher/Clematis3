name: Run CLI smoke tests

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  cli-smoke:
    name: CLI smoke (${{ matrix.os }} / py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [ "3.11" ]

    concurrency:
      group: cli-smoke-${{ github.ref }}-${{ matrix.os }}-${{ matrix.python-version }}
      cancel-in-progress: false

    env:
      CI: "true"
      TZ: "UTC"
      PYTHONUTF8: "1"
      PYTHONHASHSEED: "0"
      LC_ALL: "C.UTF-8"
      SOURCE_DATE_EPOCH: "315532800"
      CLEMATIS_NETWORK_BAN: "1"
      PYTHONDONTWRITEBYTECODE: "1"
      COLUMNS: "80"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('**/pyproject.toml', '**/setup.cfg', '**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-pip-
            ${{ runner.os }}-pip-

      - name: Install (editable if available)
        shell: bash
        run: |
          set -euxo pipefail
          python -m pip install -U pip
          if [ -f pyproject.toml ] || [ -f setup.cfg ] || [ -f setup.py ]; then
            python -m pip install -e ".[dev,test]" || \
            python -m pip install -e ".[test]" || \
            python -m pip install -e .
          elif [ -f requirements-dev.txt ]; then
            python -m pip install -r requirements-dev.txt
          else
            python -m pip install pytest hypothesis
          fi

      - name: Pre-check (version/help)
        shell: bash
        run: |
          set -euxo pipefail
          python -m clematis --version || true
          python -m clematis --help || true

      - name: Run CLI smokes
        shell: bash
        run: |
          set -euxo pipefail
          if [ -d tests/cli ]; then
            pytest -q tests/cli
          else
            echo "No CLI tests found (tests/cli) â€” skipping"
            exit 0
          fi

      - name: Upload diagnostics on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cli-smoke-${{ matrix.os }}-py${{ matrix.python-version }}-diagnostics
          path: |
            ./.logs/**
            ./.artifacts/**
            tests/cli/**
          if-no-files-found: ignore
