name: ci
on:
  push: { branches: [main] }
  pull_request: { branches: [main] }

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      # If you added requirements-dev.txt, this will install dev deps
      - name: Install dev deps (if present)
        run: |
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          else
            pip install pytest
          fi
          # Ensure minimal test deps are present regardless
          pip install pyyaml

      # Install your package in editable mode (so `from clematis...` works)
      - name: Install package
        run: pip install -e .

      - name: Sanity imports
        continue-on-error: true
        run: |
          set -euxo pipefail
          python - <<'PY'
          import sys, os, traceback, importlib.util, site, pkgutil
          print("python:", sys.version)
          print("sys.executable:", sys.executable)
          print("sys.path[0:5]:", sys.path[:5])

          def show(msg, fn):
              print(f"\n--- {msg} ---")
              try:
                  fn()
                  print(f"--- {msg}: OK ---")
              except Exception as e:
                  print(f"*** {msg}: FAILED: {e}")
                  traceback.print_exc()

          def show_spec(name):
              spec = importlib.util.find_spec(name)
              print(f"find_spec({name!r}) ->", spec)

          show("pip list head", lambda: os.system("python -m pip list | head -n 50"))
          show("where site-packages", lambda: print(site.getsitepackages(), site.getusersitepackages()))

          show_spec("yaml")
          show("import yaml", lambda: __import__("yaml"))
          try:
              import yaml
              print("yaml version:", getattr(yaml, "__version__", "unknown"))
          except Exception:
              pass

          show_spec("clematis")
          show("import clematis", lambda: __import__("clematis"))
          try:
              import clematis
              print("clematis.__file__:", getattr(clematis, "__file__", None))
              root = os.path.dirname(getattr(clematis, "__file__", "") or "")
              print("ls clematis root:", os.listdir(root) if root and os.path.isdir(root) else "N/A")
          except Exception:
              pass

          show_spec("clematis.engine.stages.t4")
          def import_t4():
              import clematis.engine.stages.t4 as t4
              print("t4.__file__:", getattr(t4, "__file__", None))
              print("has t4_filter?", hasattr(t4, "t4_filter"))
          show("import clematis.engine.stages.t4", import_t4)
          PY

      - name: Run tests
        run: pytest -q