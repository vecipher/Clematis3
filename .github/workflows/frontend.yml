name: Frontend offline & reproducibility

on:
  pull_request:
    paths:
      - "frontend/**"
      - "scripts/**"
      - "tests/frontend/**"
      - ".github/workflows/frontend.yml"
  push:
    branches: [ main ]
    paths:
      - "frontend/**"
      - "scripts/**"
      - "tests/frontend/**"
      - ".github/workflows/frontend.yml"

jobs:
  frontend:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TZ: UTC
      PYTHONHASHSEED: "0"
      SOURCE_DATE_EPOCH: "315532800"
      LC_ALL: C.UTF-8
      CLEMATIS_NETWORK_BAN: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Python deps (pytest + Playwright)
        run: |
          python -m pip install -U pip
          python -m pip install pytest playwright

      - name: Install Playwright browser
        run: |
          python -m playwright install chromium
          # Extra Linux deps if needed (ignored on macOS/Windows)
          if command -v apt-get >/dev/null 2>&1; then
            python -m playwright install-deps chromium || true
          fi

      - name: Setup Node (for TS build)
        uses: actions/setup-node@v4
        with:
          node-version: "20.19.5"
          check-latest: false

      - name: Build TS assets (dev-only)
        run: |
          if [ -f frontend/package.json ]; then
            ( cd frontend && npm ci && npm run build )
          fi

      - name: Reproducibility check (frontend)
        run: bash scripts/repro_check_local.sh --frontend

      - name: Offline headless test
        run: pytest -q tests/frontend/test_offline_browser.py
