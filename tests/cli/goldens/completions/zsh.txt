#compdef clematis

# AUTOMATICALLY GENERATED by `shtab`


_shtab_clematis_commands() {
  local _commands=(
    "bench-t4:Delegates to scripts\/bench_t4.py"
    "demo:Delegates to scripts\/run_demo.py"
    "export-logs:Export logs \+ latest snapshot into a JSON bundle (delegates to scripts\/)"
    "inspect-snapshot:Delegates to scripts\/inspect_snapshot.py"
    "rotate-logs:Delegates to scripts\/rotate_logs.py"
    "seed-lance-demo:Delegates to scripts\/seed_lance_demo.py"
    "validate:Delegates to scripts\/validate_config.py"
  )
  _describe 'clematis commands' _commands
}

_shtab_clematis_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "(- : *)--version[show program\'s version number and exit]"
)

_shtab_clematis_bench_t4_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--json[JSON output (stable, machine-readable) (default\: False)]"
  "--table[Plain table output (no color) (default\: False)]"
  "--quiet[suppress non-essential stderr (default\: False)]"
  "--verbose[increase stderr verbosity (default\: False)]"
  "(-)*:Pass-through arguments for scripts\/bench_t4.py.:"
)

_shtab_clematis_demo_options=(
  "--json[JSON output (stable, machine-readable) (default\: False)]"
  "--table[Plain table output (no color) (default\: False)]"
  "--quiet[suppress non-essential stderr (default\: False)]"
  "--verbose[increase stderr verbosity (default\: False)]"
  "(- : *)"{-h,--help}"[show this help message and exit]"
)

_shtab_clematis_export_logs_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
)

_shtab_clematis_inspect_snapshot_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--json[JSON output (stable, machine-readable) (default\: False)]"
  "--table[Plain table output (no color) (default\: False)]"
  "--quiet[suppress non-essential stderr (default\: False)]"
  "--verbose[increase stderr verbosity (default\: False)]"
  "(-)*:Pass-through arguments for scripts\/inspect_snapshot.py.:"
)

_shtab_clematis_rotate_logs_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--json[JSON output (stable, machine-readable) (default\: False)]"
  "--table[Plain table output (no color) (default\: False)]"
  "--quiet[suppress non-essential stderr (default\: False)]"
  "--verbose[increase stderr verbosity (default\: False)]"
  "(-)*:args:"
)

_shtab_clematis_seed_lance_demo_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--json[JSON output (stable, machine-readable) (default\: False)]"
  "--table[Plain table output (no color) (default\: False)]"
  "--quiet[suppress non-essential stderr (default\: False)]"
  "--verbose[increase stderr verbosity (default\: False)]"
  "(-)*:Pass-through arguments for scripts\/seed_lance_demo.py.:"
)

_shtab_clematis_validate_options=(
  "--json[JSON output (stable, machine-readable) (default\: False)]"
  "--table[Plain table output (no color) (default\: False)]"
  "--quiet[suppress non-essential stderr (default\: False)]"
  "--verbose[increase stderr verbosity (default\: False)]"
  "(- : *)"{-h,--help}"[show this help message and exit]"
)


_shtab_clematis() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_clematis_options[(I)${(q)one_or_more}*]} + ${_shtab_clematis_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_clematis_options+=(': :_shtab_clematis_commands' '*::: :->clematis')
  fi
  _arguments -C -s $_shtab_clematis_options

  case $state in
    clematis)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_clematis-$line[1]:"
      case $line[1] in
        bench-t4) _arguments -C -s $_shtab_clematis_bench_t4_options ;;
        demo) _arguments -C -s $_shtab_clematis_demo_options ;;
        export-logs) _arguments -C -s $_shtab_clematis_export_logs_options ;;
        inspect-snapshot) _arguments -C -s $_shtab_clematis_inspect_snapshot_options ;;
        rotate-logs) _arguments -C -s $_shtab_clematis_rotate_logs_options ;;
        seed-lance-demo) _arguments -C -s $_shtab_clematis_seed_lance_demo_options ;;
        validate) _arguments -C -s $_shtab_clematis_validate_options ;;
      esac
  esac
}



typeset -A opt_args

if [[ $zsh_eval_context[-1] == eval ]]; then
  # eval/source/. command, register function for later
  compdef _shtab_clematis -N clematis
else
  # autoload from fpath, call function directly
  _shtab_clematis "$@"
fi
